name: AutoRelease

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag name
        id: get_tag
        run: |
          TAG_NAME=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Wait for other workflows
        run: |
          sleep 300  # 等待5分钟让其他工作流完成

      - name: Download Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const allArtifacts = [];
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event: 'push',
              status: 'completed',
              created: `>${new Date(Date.now() - 10 * 60 * 1000).toISOString()}`  // 最近10分钟内的运行
            });
            
            for (const run of runs.data.workflow_runs) {
              if (run.head_sha === context.sha) {
                const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run.id
                });
                
                for (const artifact of artifacts.data.artifacts) {
                  const download = await github.rest.actions.downloadArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                    archive_format: 'zip'
                  });
                  
                  const fs = require('fs');
                  fs.writeFileSync(`${artifact.name}.zip`, Buffer.from(download.data));
                }
              }
            }

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          release_name: Release ${{ steps.get_tag.outputs.tag_name }}
          draft: false
          prerelease: false

      - name: Unzip Artifacts
        run: |
          for zip in *.zip
          do
            unzip "$zip" || true
          done

      - name: Upload Release Assets
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const release_id = '${{ steps.create_release.outputs.id }}';
            
            const files = fs.readdirSync('.');
            for (const file of files) {
              if (file.endsWith('.tar.gz')) {
                await github.rest.repos.uploadReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: release_id,
                  name: file,
                  data: fs.readFileSync(file)
                });
              }
            }