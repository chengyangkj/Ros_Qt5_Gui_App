name: AutoRelease

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*'
jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Write URL
        run: |
          echo "upload_url=${{steps.create_release.outputs.upload_url}}" >> $GITHUB_OUTPUT
  build_melodic:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        os-ros: 
          - { image: 'ubuntu:focal', ros: 'foxy' }
          - { image: 'ubuntu:jammy', ros: 'humble' }
          - { image: 'ubuntu:focal', ros: 'noetic' } 
    container:
      image: ${{matrix.os-ros.image}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up ROS
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{matrix.os-ros.ros}}

      - name: Install Dependencies
        run: sudo apt-get install qtbase5-dev qt5-qmake libqt5svg5-dev qtbase5-dev-tools qtbase5-private-dev qt5* libeigen3-dev libgtest-dev libsdl-image1.2-dev libsdl1.2-dev -y

      - name: Update gtest
        run: |
          wget https://github.com/google/googletest/archive/refs/tags/release-1.12.1.tar.gz \
          && tar -zxvf release-1.12.1.tar.gz \
          && cd googletest-release-1.12.1 \
          && mkdir build \
          && cd build \
          && cmake .. \
          && make -j$(nproc) \
          && sudo make install

      - name: Build
        run: |
          /bin/bash -c \
          "source /opt/ros/${{matrix.os-ros.ros}}/setup.bash \
          && sudo apt-get install qtbase5-dev qt5-qmake libqt5svg5-dev qtbase5-dev-tools qtbase5-private-dev qt5* libeigen3-dev libgtest-dev -y  \
          && rm -rf build \
          && mkdir build/ \
          && cd build/ \
          && cmake .. -DBUILD_WITH_TEST=OFF\
          && make -j$(nproc) \
          && make install"
      - name: Test
        run: |
          /bin/bash -c \
          "source /opt/ros/${{matrix.os-ros.ros}}/setup.bash \
          && cd build \
          && make test"
      - name: Package Release
        run: |
          cd build/install/bin
          tar -czvf release_package.tar.gz ./*
          mv release_package.tar.gz $GITHUB_WORKSPACE/release_package.tar.gz
      - name: Upload Release Asset
        env:
          # upload_url: ${{needs.create_release.outputs.upload_url}}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: ${{ github.workspace }}/release_package.tar.gz
          asset_name: ros_qt5_gui_app_${{matrix.os-ros.ros}}_${{matrix.os-ros.image}}_x86_64.tar.gz
          asset_content_type: application/gzip