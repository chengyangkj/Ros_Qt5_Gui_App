name: ROS1:Melodic(18.04)

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: osrf/ros:melodic-desktop
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Update Cmake
        run: |
          apt-get update && apt-get install -y wget
          wget https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0-linux-x86_64.sh \
          && chmod +x cmake-3.20.0-linux-x86_64.sh \
          && ./cmake-3.20.0-linux-x86_64.sh --prefix=/usr/local --skip-license \
          && ln -sf /usr/local/bin/cmake /usr/bin/cmake \
          && cmake --version

      - name: Install Dependencies
        run: |
          apt-get update && apt-get install -y \
          qtbase5-dev \
          qt5-qmake \
          libqt5svg5-dev \
          qtbase5-dev-tools \
          qtbase5-private-dev \
          qt5* \
          libeigen3-dev \
          libgtest-dev \
          libsdl-image1.2-dev \
          libsdl1.2-dev \
          wget

      - name: Update gtest
        run: |
          wget https://github.com/google/googletest/archive/refs/tags/release-1.12.1.tar.gz \
          && tar -zxvf release-1.12.1.tar.gz \
          && cd googletest-release-1.12.1 \
          && mkdir build \
          && cd build \
          && cmake .. \
          && make -j$(nproc) \
          && make install

      - name: Build
        run: |
          source /opt/ros/melodic/setup.bash \
          && rm -rf build \
          && mkdir build/ \
          && cd build/ \
          && cmake .. -DBUILD_WITH_TEST=OFF \
          && make -j$(nproc) \
          && make install

      - name: Test
        run: |
          source /opt/ros/melodic/setup.bash \
          && cd build \
          && make test

      - name: Package Release
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd build/install/bin
          tar -czvf release_package.tar.gz ./*
          mv release_package.tar.gz $GITHUB_WORKSPACE/release_package.tar.gz
